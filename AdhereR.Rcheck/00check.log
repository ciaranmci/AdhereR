* using log directory ‘/Users/ddediu/Work/Misc/AdhereR/GitHub/AdhereR/AdhereR.Rcheck’
* using R version 3.5.3 (2019-03-11)
* using platform: x86_64-apple-darwin15.6.0 (64-bit)
* using session charset: UTF-8
* using options ‘--no-manual --as-cran’
* checking for file ‘AdhereR/DESCRIPTION’ ... OK
* checking extension type ... Package
* this is package ‘AdhereR’ version ‘0.6’
* package encoding: UTF-8
* checking package namespace information ... OK
* checking package dependencies ... OK
* checking if this is a source package ... OK
* checking if there is a namespace ... OK
* checking for executable files ... OK
* checking for hidden files and directories ... OK
* checking for portable file names ... OK
* checking for sufficient/correct file permissions ... OK
* checking serialization versions ... OK
* checking whether package ‘AdhereR’ can be installed ... OK
* checking installed package size ... OK
* checking package directory ... OK
* checking ‘build’ directory ... OK
* checking DESCRIPTION meta-information ... OK
* checking top-level files ... OK
* checking for left-over files ... OK
* checking index information ... OK
* checking package subdirectories ... OK
* checking R files for non-ASCII characters ... OK
* checking R files for syntax errors ... OK
* checking whether the package can be loaded ... OK
* checking whether the package can be loaded with stated dependencies ... OK
* checking whether the package can be unloaded cleanly ... OK
* checking whether the namespace can be loaded with stated dependencies ... OK
* checking whether the namespace can be unloaded cleanly ... OK
* checking dependencies in R code ... NOTE
There are ::: calls to the package's namespace in its code. A package
  almost never needs to use ::: for its own objects:
  ‘.check.medication.groups’ ‘.compute.function’
  ‘.fill.medication.groups’
* checking S3 generic/method consistency ... OK
* checking replacement functions ... OK
* checking foreign function calls ... OK
* checking R code for possible problems ... NOTE
CMA_polypharmacy : .workhorse.function: no visible binding for global
  variable ‘group’
CMA_polypharmacy : .workhorse.function : summarize_longitudinal: no
  visible binding for global variable ‘intersect.duration’
CMA_polypharmacy : .workhorse.function : summarize_longitudinal: no
  visible binding for global variable ‘prop.trt.groups.available’
CMA_polypharmacy : .workhorse.function : summarize_longitudinal: no
  visible binding for global variable ‘.obs.duration’
CMA_polypharmacy : .workhorse.function: no visible binding for global
  variable ‘intersect.ID’
CMA_polypharmacy : .workhorse.function: no visible binding for global
  variable ‘intersect.start’
CMA_polypharmacy : .workhorse.function: no visible binding for global
  variable ‘intersect.end’
CMA_polypharmacy : .workhorse.function: no visible global function
  definition for ‘.’
CMA_polypharmacy : .workhorse.function: no visible binding for global
  variable ‘prop.trt.groups.available’
CMA_polypharmacy : .workhorse.function: no visible binding for global
  variable ‘.obs.duration’
CMA_polypharmacy : .workhorse.function: no visible binding for global
  variable ‘PATIENT_ID’
CMA_polypharmacy: no visible binding for global variable ‘.new.ID’
CMA_polypharmacy: no visible binding for global variable ‘group’
CMA_polypharmacy: no visible binding for global variable
  ‘event.interval.colname’
CMA_polypharmacy: no visible binding for global variable
  ‘gap.days.colname’
compute.treat.epi: no visible binding for global variable ‘date.format’
compute.treat.epi: no visible binding for global variable ‘ID.colname’
compute.treat.epi: no visible binding for global variable ‘group’
compute.treat.epi: no visible binding for global variable
  ‘.PATIENT.MED.ID’
compute.treat.epi: no visible binding for global variable
  ‘event.date.colname’
compute.treat.epi: no visible binding for global variable
  ‘event.duration.colname’
compute.treat.epi: no visible binding for global variable
  ‘event.daily.dose.colname’
compute.treat.epi: no visible binding for global variable
  ‘medication.class.colname’
compute.treat.epi: no visible binding for global variable
  ‘followup.window.start’
compute.treat.epi: no visible binding for global variable
  ‘followup.window.start.unit’
compute.treat.epi: no visible binding for global variable
  ‘followup.window.duration’
compute.treat.epi: no visible binding for global variable
  ‘followup.window.duration.unit’
compute.treat.epi: no visible binding for global variable
  ‘observation.window.start’
compute.treat.epi: no visible binding for global variable
  ‘observation.window.start.unit’
compute.treat.epi: no visible binding for global variable
  ‘observation.window.duration’
compute.treat.epi: no visible binding for global variable
  ‘observation.window.duration.unit’
compute.treat.epi: no visible binding for global variable
  ‘suppress.warnings’
compute.treat.epi: no visible binding for global variable
  ‘carryover.within.obs.window’
compute.treat.epi: no visible binding for global variable
  ‘carryover.into.obs.window’
compute.treat.epi: no visible binding for global variable
  ‘carry.only.for.same.medication’
compute.treat.epi: no visible binding for global variable
  ‘consider.dosage.change’
compute.treat.epi: no visible binding for global variable
  ‘medication.group’
compute.treat.epi: no visible global function definition for ‘.’
compute.treat.epi: no visible binding for global variable ‘gap.days’
compute_event_durations: no visible binding for global variable
  ‘EVENT.ID’
compute_event_durations : process_patient : process_medication :
  process_dispensing_events : compute.special.intervals: no visible
  binding for global variable ‘EVENT.ID’
compute_event_durations : process_patient : process_medication: no
  visible binding for global variable ‘process.seq’
compute_event_durations : process_patient : process_medication: no
  visible binding for global variable ‘process.seq.num’
compute_event_durations : process_patient : process_medication: no
  visible binding for global variable ‘carryover.from.last’
compute_event_durations : process_patient : process_medication: no
  visible binding for global variable ‘carryover.total’
prune_event_durations: no visible binding for global variable
  ‘EVENT.ID’
Undefined global functions or variables:
  . .PATIENT.MED.ID .new.ID .obs.duration EVENT.ID ID.colname
  PATIENT_ID carry.only.for.same.medication carryover.from.last
  carryover.into.obs.window carryover.total carryover.within.obs.window
  consider.dosage.change date.format event.daily.dose.colname
  event.date.colname event.duration.colname event.interval.colname
  followup.window.duration followup.window.duration.unit
  followup.window.start followup.window.start.unit gap.days
  gap.days.colname group intersect.ID intersect.duration intersect.end
  intersect.start medication.class.colname medication.group
  observation.window.duration observation.window.duration.unit
  observation.window.start observation.window.start.unit process.seq
  process.seq.num prop.trt.groups.available suppress.warnings
* checking Rd files ... OK
* checking Rd metadata ... OK
* checking Rd line widths ... OK
* checking Rd cross-references ... OK
* checking for missing documentation entries ... OK
* checking for code/documentation mismatches ... OK
* checking Rd \usage sections ... WARNING
Undocumented arguments in documentation object 'CMA_polypharmacy'
  ‘data’

Undocumented arguments in documentation object 'compute_event_durations'
  ‘carryover’

Functions with \usage entries need to have the appropriate \alias
entries, and all their arguments documented.
The \usage entries must correspond to syntactically valid R code.
See chapter ‘Writing R documentation files’ in the ‘Writing R
Extensions’ manual.
* checking Rd contents ... OK
* checking for unstated dependencies in examples ... OK
* checking contents of ‘data’ directory ... OK
* checking data for non-ASCII characters ... OK
* checking data for ASCII and uncompressed saves ... OK
* checking sizes of PDF files under ‘inst/doc’ ... OK
* checking installed files from ‘inst/doc’ ... OK
* checking files in ‘vignettes’ ... OK
* checking examples ... OK
* checking for unstated dependencies in vignettes ... OK
* checking package vignettes in ‘inst/doc’ ... OK
* checking re-building of vignette outputs ... OK
* DONE
Status: 1 WARNING, 2 NOTEs
